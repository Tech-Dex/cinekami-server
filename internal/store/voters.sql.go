// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: voters.sql

package store

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const GetVoterByFingerprint = `-- name: GetVoterByFingerprint :one
SELECT id FROM voters WHERE fingerprint = $1
`

func (q *Queries) GetVoterByFingerprint(ctx context.Context, fingerprint string) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, GetVoterByFingerprint, fingerprint)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}

const InsertVoter = `-- name: InsertVoter :one
INSERT INTO voters (fingerprint)
VALUES ($1)
RETURNING id
`

func (q *Queries) InsertVoter(ctx context.Context, fingerprint string) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, InsertVoter, fingerprint)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
