// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: votes.sql

package store

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const InsertVote = `-- name: InsertVote :one
INSERT INTO votes (movie_id, voter_id, category)
VALUES ($1, $2, $3)
ON CONFLICT (movie_id, voter_id, category) DO NOTHING
RETURNING id
`

type InsertVoteParams struct {
	MovieID  int64       `json:"movie_id"`
	VoterID  pgtype.UUID `json:"voter_id"`
	Category interface{} `json:"category"`
}

func (q *Queries) InsertVote(ctx context.Context, arg InsertVoteParams) (pgtype.UUID, error) {
	row := q.db.QueryRow(ctx, InsertVote, arg.MovieID, arg.VoterID, arg.Category)
	var id pgtype.UUID
	err := row.Scan(&id)
	return id, err
}
