// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package store

import (
	"encoding/json"

	"github.com/jackc/pgx/v5/pgtype"
)

type Movie struct {
	ID           int64              `json:"id"`
	Title        string             `json:"title"`
	ReleaseDate  pgtype.Date        `json:"release_date"`
	Overview     pgtype.Text        `json:"overview"`
	PosterPath   pgtype.Text        `json:"poster_path"`
	BackdropPath pgtype.Text        `json:"backdrop_path"`
	Popularity   pgtype.Float8      `json:"popularity"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
	ImdbUrl      pgtype.Text        `json:"imdb_url"`
	CinemagiaUrl pgtype.Text        `json:"cinemagia_url"`
}

type Snapshot struct {
	ID       pgtype.UUID        `json:"id"`
	Month    string             `json:"month"`
	MovieID  int64              `json:"movie_id"`
	Tallies  json.RawMessage    `json:"tallies"`
	ClosedAt pgtype.Timestamptz `json:"closed_at"`
}

type User struct {
	ID           pgtype.UUID        `json:"id"`
	Email        pgtype.Text        `json:"email"`
	PasswordHash pgtype.Text        `json:"password_hash"`
	PasswordSalt pgtype.Text        `json:"password_salt"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type Vote struct {
	ID        pgtype.UUID        `json:"id"`
	MovieID   int64              `json:"movie_id"`
	VoterID   pgtype.UUID        `json:"voter_id"`
	Category  string             `json:"category"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type VoteTally struct {
	MovieID  int64       `json:"movie_id"`
	Category string      `json:"category"`
	Count    pgtype.Int8 `json:"count"`
}

type Voter struct {
	ID          pgtype.UUID        `json:"id"`
	Fingerprint string             `json:"fingerprint"`
	UserID      pgtype.UUID        `json:"user_id"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}
